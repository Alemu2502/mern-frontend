{"version":3,"sources":["config.js","auth/index.jsx","core/Menu.jsx","core/cartHelpers.jsx","core/Layout.jsx","user/Signup.jsx","user/Signin.jsx","core/apiCore.jsx","core/ShowImage.jsx","core/StarRating.js","core/Card.jsx","core/Search.jsx","core/Home.jsx","auth/PrivateRoute.jsx","user/UserDashboard.jsx","user/apiUser.jsx","auth/AdminRoute.jsx","user/AdminDashboard.jsx","admin/apiAdmin.jsx","admin/AddCategory.jsx","admin/AddProduct.jsx","core/Shop.jsx","core/reviews.jsx","core/reviewForm.jsx","core/Product.jsx","core/Checkout.jsx","core/Cart.jsx","admin/Orders.jsx","user/Profile.jsx","admin/ManageProducts.jsx","admin/ManageCategories.js","admin/UpdateProduct.jsx","admin/UpdateCategory.jsx","user/EmailVerification.js","user/ForgotPassword.js","user/ResetPassword.js","user/contactForm.jsx","Routes.jsx","index.jsx"],"names":["API","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","location","path","pathname","color","Menu","navigate","useNavigate","useLocation","React","createElement","className","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","style","length","user","role","Fragment","cursor","onClick","async","removeItem","next","fetch","method","err","signout","Layout","_ref","title","description","children","Signup","values","setValues","useState","name","email","password","error","success","showPassword","passwordStrength","setPasswordStrength","hasUpperCase","hasLowerCase","hasNumber","hasSpecialChar","isLongEnough","showPasswordStrength","setShowPasswordStrength","handleChange","event","value","target","[object Object]","updatedStrength","test","Object","every","strength","toggleShowPassword","isPasswordStrong","clickSubmit","preventDefault","isEmailValid","toLowerCase","includes","split","isPasswordValid","response","headers","Accept","Content-Type","body","stringify","json","signup","then","catch","console","log","display","onChange","required","onFocus","onBlur","Signin","loading","redirectToReferrer","signin","data","errorMsg","authenticate","setItem","htmlFor","Navigate","handleResponse","ok","contentType","get","Error","text","getProducts","sortBy","fetchWithToken","url","options","token","authHeader","Authorization","errorMessage","ShowImage","item","src","_id","alt","maxHeight","maxWidth","StarRating","count","size","edit","handleClick","index","isHalf","newValue","Math","min","getStarClass","Array","map","_","key","position","width","height","left","top","zIndex","right","fontSize","WebkitTextStroke","transition","overflow","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","redirect","setRedirect","setCount","averageRating","setAverageRating","useEffect","productId","getProductReviews","avgRating","reduce","acc","review","rating","parseFloat","toFixed","fetchReviews","addToCart","arguments","undefined","cart","push","from","Set","p","find","addItem","updateItem","forEach","i","shouldRedirect","substring","price","category","author","margin","moment","createdAt","fromNow","alignItems","marginTop","quantity","marginLeft","showStock","showViewButton","showAddToCartBtn","filter","showRemoveButton","showCartUpdateOptions","Search","setData","categories","search","results","searched","loadCategories","getCategories","searchData","query","queryString","params","list","searchSubmit","e","onSubmit","c","placeholder","border","searchMessage","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","PrivateRoute","component","Component","rest","state","Dashboard","history","setHistory","init","userId","getPurchaseHistory","h","products","purchaseHistory","AdminRoute","AdminDashboard","createProduct","AddCategory","setName","setError","setSuccess","createCategory","showSuccess","showError","autoFocus","initialState","shipping","photo","createdProduct","formData","FormData","productReducer","action","field","AddProduct","dispatch","useReducer","useCallback","files","set","accept","marginBottom","disabled","v","Reviews","reviews","setReviews","loadReviews","getReviews","comment","ReviewForm","onReviewSubmit","setRating","setComment","message","setMessage","isError","setIsError","reviewId","setReviewId","hasCheckedReview","setHasCheckedReview","delivered","setDelivered","hasDelivered","getUserReview","checkReviewExists","updateReview","addReview","rows","deleteReview","Product","setProduct","relatedProduct","setRelatedProduct","useParams","loadSingleProduct","read","listRelated","Checkout","clientToken","instance","address","instanceRef","useRef","getToken","getBraintreeClientToken","handleAddress","getTotal","currentValue","nextValue","buy","nonce","current","requestPaymentMethod","paymentData","processPayment","paymentMethodNonce","amount","createOrderData","transaction_id","transaction","order","createOrder","emptyCart","showDropIn","DropIn","authorization","paypal","flow","onInstance","showLoading","Cart","items","setItems","showItems","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","o","oIndex","borderBottom","showStatus","pIndex","padding","Profile","update","updateUser","auth","profileUpdate","ManageProducts","setProducts","loadProducts","destroy","confirm","responseData","deleteProduct","ManageCategories","setCategories","categoryId","deleteCategory","UpdateProduct","showSuccessModal","showErrorModal","initCategories","getProduct","updateProduct","setTimeout","UpdateCategory","getCategory","handleSubmit","updateCategory","EmailVerification","axios","post","verifyEmail","ForgotPassword","setEmail","messageType","setMessageType","ResetPassword","newPassword","confirmPassword","ContactForm","setFormData","AppRoutes","Routes","Route","element","Shop","container","document","getElementById","ReactDOM","createRoot","render","StrictMode","BrowserRouter","future","v7_startTransition","v7_relativeSplatPath"],"mappings":"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","file":"static/js/main.9dde9344.chunk.js","sourcesContent":["// config.js\r\nconst API = process.env.NODE_ENV === 'production' \r\n  ? 'https://mern-backend-pigq.onrender.com/api' \r\n  : 'http://localhost:3000/api';\r\nexport { API };\r\n","import { API } from '../config';\r\n\r\nexport const signup = async (user) => {\r\n    try {\r\n        const response = await fetch(`${API}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        });\r\n        return await response.json();\r\n    } catch (err) {\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const signin = async (user) => {\r\n    try {\r\n        const response = await fetch(`${API}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        });\r\n        return await response.json();\r\n    } catch (err) {\r\n\r\n    }\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const signout = async (next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        try {\r\n        await fetch(`${API}/signout`, {\r\n                method: 'GET'\r\n            });\r\n        } catch (err) {\r\n            \r\n        }\r\n    }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { signout, isAuthenticated } from \"../auth\";\r\nimport { itemTotal } from \"./cartHelpers\";\r\n\r\nconst isActive = (location, path) => {\r\n    if (location.pathname === path) {\r\n        return { color: \"#ff9900\" };\r\n    } else {\r\n        return { color: \"#ffffff\" };\r\n    }\r\n};\r\n\r\nconst Menu = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Brand</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav ms-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(location, \"/\")} to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(location, \"/cart\")} to=\"/cart\">\r\n                            Cart{\" \"}\r\n                            <sup>\r\n                                <small className=\"cart-badge\">{itemTotal()}</small>\r\n                            </sup>\r\n                        </Link>\r\n                    </li>\r\n                    {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" style={isActive(location, \"/user/dashboard\")} to=\"/user/dashboard\">\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                    {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                        <>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={isActive(location, \"/admin/dashboard\")} to=\"/admin/dashboard\">\r\n                                    Dashboard\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={isActive(location, \"/shop\")} to=\"/shop\">\r\n                                    Shop\r\n                                </Link>\r\n                            </li>\r\n                        </>\r\n                    )}\r\n                    {!isAuthenticated() && (\r\n                        <>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={isActive(location, \"/signin\")} to=\"/signin\">\r\n                                    Signin\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={isActive(location, \"/signup\")} to=\"/signup\">\r\n                                    Signup\r\n                                </Link>\r\n                            </li>\r\n                        </>\r\n                    )}\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(location, \"/contact\")} to=\"/contact\">\r\n                            Contact\r\n                        </Link>\r\n                    </li>\r\n                    {isAuthenticated() && (\r\n                        <li className=\"nav-item\">\r\n                            <span\r\n                                className=\"nav-link\"\r\n                                style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                                onClick={() =>\r\n                                    signout(() => {\r\n                                        navigate(\"/\");\r\n                                    })\r\n                                }\r\n                            >\r\n                                Signout\r\n                            </span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","export const addItem = (item = {}, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // Remove duplicates\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.forEach((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart = cart.filter(product => product._id !== productId);\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport \"../styles.css\";\r\n\r\nconst Layout = ({\r\n    title = \"Title\",\r\n    description = \"Description\",\r\n    className,\r\n    children\r\n}) => (\r\n    <div>\r\n        <Menu />\r\n        <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signup } from '../auth';\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false,\r\n        showPassword: false\r\n    });\r\n\r\n    const { name, email, password, success, error, showPassword } = values;\r\n    const [passwordStrength, setPasswordStrength] = useState({\r\n        hasUpperCase: false,\r\n        hasLowerCase: false,\r\n        hasNumber: false,\r\n        hasSpecialChar: false,\r\n        isLongEnough: false\r\n    });\r\n    const [showPasswordStrength, setShowPasswordStrength] = useState(false);\r\n\r\n    const handleChange = name => event => {\r\n        const value = event.target.value;\r\n        setValues({ ...values, error: false, [name]: value });\r\n\r\n        if (name === 'password') {\r\n            setShowPasswordStrength(true);\r\n            const updatedStrength = {\r\n                hasUpperCase: /[A-Z]/.test(value),\r\n                hasLowerCase: /[a-z]/.test(value),\r\n                hasNumber: /[0-9]/.test(value),\r\n                hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(value),\r\n                isLongEnough: value.length >= 8\r\n            };\r\n            setPasswordStrength(updatedStrength);\r\n            if (Object.values(updatedStrength).every(strength => strength)) {\r\n                setShowPasswordStrength(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleShowPassword = () => {\r\n        setValues({ ...values, showPassword: !showPassword });\r\n    };\r\n\r\n    const isPasswordStrong = () => {\r\n        return (\r\n            passwordStrength.hasUpperCase &&\r\n            passwordStrength.hasLowerCase &&\r\n            passwordStrength.hasNumber &&\r\n            passwordStrength.hasSpecialChar &&\r\n            passwordStrength.isLongEnough\r\n        );\r\n    };\r\n\r\n    const isEmailValid = (email) => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i; // Ensures at least two characters for TLD\r\n        return emailRegex.test(email);\r\n    };\r\n\r\n    const isPasswordValid = (password) => {\r\n        return isPasswordStrong() && !password.toLowerCase().includes(name.toLowerCase()) && !password.toLowerCase().includes(email.split('@')[0].toLowerCase());\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        if (!name || !email || !password) {\r\n            setValues({ ...values, error: 'All fields are required', success: false });\r\n            return;\r\n        }\r\n        if (!isEmailValid(email)) {\r\n            setValues({ ...values, error: 'Invalid email format', success: false });\r\n            return;\r\n        }\r\n        if (!isPasswordStrong()) {\r\n            setValues({ ...values, error: 'Password does not meet strength requirements', success: false });\r\n            return;\r\n        }\r\n        if (!isPasswordValid(password)) {\r\n            setValues({ ...values, error: 'Your password cannot contain your personal information', success: false });\r\n            return;\r\n        }\r\n        setValues({ ...values, error: false });\r\n        signup({ name, email, password })\r\n            .then(response => {\r\n                if (response.error) {\r\n                    if (response.error === 'Email already exists. Please sign in.') {\r\n                        setValues({\r\n                            ...values,\r\n                            error: <span>{response.error} Please <Link to=\"/signin\">sign in</Link>.</span>,\r\n                            success: false\r\n                        });\r\n                    } else {\r\n                        setValues({\r\n                            ...values,\r\n                            error: response.error,\r\n                            success: false\r\n                        });\r\n                    }\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        email: '',\r\n                        password: '',\r\n                        error: '',\r\n                        success: true\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('Error occurred:', err);\r\n                setValues({\r\n                    ...values,\r\n                    error: 'Failed to create account. Please try again.',\r\n                    success: false\r\n                });\r\n            });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} required />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} required />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        onChange={handleChange('password')}\r\n                        onFocus={() => setShowPasswordStrength(true)}\r\n                        onBlur={() => setShowPasswordStrength(false)}\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        value={password}\r\n                        required\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\" onClick={toggleShowPassword} style={{ cursor: \"pointer\" }}>\r\n                            {showPassword ? \"Hide\" : \"Show\"}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {showPasswordStrength && (\r\n                    <div className=\"password-strength mt-2\">\r\n                        <p className={passwordStrength.hasUpperCase ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasUpperCase ? '✓' : '✗'} Uppercase letter\r\n                        </p>\r\n                        <p className={passwordStrength.hasLowerCase ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasLowerCase ? '✓' : '✗'} Lowercase letter\r\n                        </p>\r\n                        <p className={passwordStrength.hasNumber ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasNumber ? '✓' : '✗'} Number\r\n                        </p>\r\n                        <p className={passwordStrength.hasSpecialChar ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasSpecialChar ? '✓' : '✗'} Special character\r\n                        </p>\r\n                        <p className={passwordStrength.isLongEnough ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.isLongEnough ? '✓' : '✗'} Minimum 8 characters\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className=\"btn btn-primary btn-block\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-success\" style={{ display: success ? '' : 'none' }}>\r\n            <h4>Account Created Successfully!</h4>\r\n            <p>\r\n                Please check your inbox to verify your email address. You can now \r\n                <Link to=\"/signin\" className=\"alert-link\"> sign in</Link> once verified.\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signup\"\r\n            description=\"Signup to Node React E-commerce App\"\r\n            className=\"container col-12 col-md-8 offset-md-2\"\r\n        >\r\n            {showSuccess()}\r\n            {showError()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Navigate, Link } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false,\r\n        showPassword: false\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer, showPassword } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const toggleShowPassword = () => {\r\n        setValues({ ...values, showPassword: !showPassword });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password }).then(data => {\r\n            if (data && data.error) {\r\n                const errorMsg = data.error;\r\n                if (errorMsg.includes('User with that email does not exist')) {\r\n                    setValues({ \r\n                        ...values, \r\n                        error: <span>\r\n                                    The email address you entered is not registered. Please <Link to=\"/signup\">sign up</Link> first.\r\n                               </span>, \r\n                        loading: false \r\n                    });\r\n                } else {\r\n                    setValues({ ...values, error: errorMsg, loading: false });\r\n                }\r\n            } else if (data) {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    });\r\n                });\r\n            } else {\r\n                setValues({ \r\n                    ...values, \r\n                    error: \"Something went wrong. Please try again.\", \r\n                    loading: false \r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signInForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"email\" className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\" className=\"text-muted\">Password</label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        onChange={handleChange(\"password\")}\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        required\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\" onClick={toggleShowPassword} style={{ cursor: \"pointer\" }}>\r\n                            {showPassword ? \"Hide\" : \"Show\"}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary btn-block\">Submit</button>\r\n            <p>\r\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n            </p>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Navigate to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Navigate to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Navigate to=\"/\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signin\"\r\n            description=\"Signin to Node React E-commerce App\"\r\n            className=\"container col-12 col-md-8 offset-md-2\"\r\n        >\r\n            {showLoading()}\r\n            {showError()}\r\n            {signInForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n","import { API } from '../config';\r\nimport queryString from 'query-string';\r\n\r\nconst handleResponse = async (response) => {\r\n  if (response.ok) {\r\n    const contentType = response.headers.get(\"content-type\");\r\n    if (contentType && contentType.includes(\"application/json\")) {\r\n      return await response.json();\r\n    } else {\r\n      throw new Error(\"Received non-JSON response\");\r\n    }\r\n  } else {\r\n     await response.text();\r\n  }\r\n};\r\n\r\nexport const getCategories = async () => {\r\n  try {\r\n    const response = await fetch(`${API}/categories`, { method: \"GET\" });\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n\r\nexport const getProducts = async (sortBy) => {\r\n  try {\r\n    const response = await fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, { method: \"GET\" });\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n\r\nexport const hasDelivered = async (productId, userId, token) => {\r\n  try {\r\n    const response = await fetch(`${API}/delivered/${productId}/${userId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n  } catch (err) {}\r\n};\r\n\r\nconst fetchWithToken = async (url, options, token) => {\r\n  if (!token) return;\r\n  const authHeader = { Authorization: `Bearer ${token}` };\r\n  options.headers = { ...options.headers, ...authHeader };\r\n\r\n  const response = await fetch(url, options);\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json().catch(() => ({ error: 'Unknown error' }));\r\n    const errorMessage = error.error || 'Unknown error';\r\n    throw new Error(errorMessage);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getUserReview = async (productId, userId, token) => {\r\n  try {\r\n    const response = await fetchWithToken(`${API}/review/${productId}/${userId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json'\r\n      }\r\n    }, token);\r\n    return response;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const getBraintreeClientToken = async (userId, token) => {\r\n  try {\r\n    const response = await fetchWithToken(\r\n      `${API}/braintree/getToken/${userId}`, \r\n      { method: \"GET\", headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" } }, \r\n      token\r\n    );\r\n    return response;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const processPayment = async (userId, token, paymentData) => {\r\n  try {\r\n    const response = await fetchWithToken(\r\n      `${API}/braintree/payment/${userId}`, \r\n      { \r\n        method: \"POST\", \r\n        headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" }, \r\n        body: JSON.stringify(paymentData) \r\n      }, \r\n      token\r\n    );\r\n    return response;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const updateReview = async (reviewId, review, token, userId) => {\r\n  try {\r\n    const response = await fetch(`${API}/review/${reviewId}/${userId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(review)\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const deleteReview = async (reviewId, productId, userId, token) => {\r\n  try {\r\n    const response = await fetchWithToken(`${API}/review/${reviewId}/${productId}/${userId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Accept: 'application/json'\r\n      }\r\n    }, token);\r\n    return response;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const addReview = async (productId, userId, review, token) => {\r\n  try {\r\n    const response = await fetchWithToken(`${API}/review/${productId}/${userId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(review)\r\n    }, token);\r\n    return await response;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const getReviews = async (productId) => {\r\n  try {\r\n    const response = await fetch(`${API}/reviews/${productId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n\r\nexport const getProductReviews = async (productId) => {\r\n  try {\r\n    const response = await fetch(`${API}/reviews/${productId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    if (!response.ok) {\r\n      const error = await response.json().catch(() => ({ error: 'Unknown error' }));\r\n      const errorMessage = error.error || 'Unknown error';\r\n      throw new Error(errorMessage);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getFilteredProducts = async (skip, limit, filters = {}) => {\r\n  const data = { limit, skip, filters };\r\n  try {\r\n    const response = await fetch(`${API}/products/by/search`, {\r\n      method: \"POST\",\r\n      headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data)\r\n    });\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n\r\nexport const list = async (params) => {\r\n  const query = queryString.stringify(params);\r\n  try {\r\n    const response = await fetch(`${API}/products/search?${query}`, {\r\n      method: \"GET\"\r\n    });\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n\r\nexport const read = async (productId) => { \r\n  try { \r\n    const response = await fetch(`${API}/product/${productId}`, { method: 'GET' }); \r\n    return await handleResponse(response); \r\n  } catch (err) {} \r\n};\r\n\r\nexport const listRelated = async (productId) => {\r\n  try {\r\n    const response = await fetch(`${API}/products/related/${productId}`, {\r\n      method: \"GET\"\r\n    });\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n\r\nexport const createOrder = async (userId, token, createOrderData) => {\r\n  try {\r\n    const response = await fetchWithToken(`${API}/order/create/${userId}`, {\r\n      method: \"POST\",\r\n      headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order: createOrderData })\r\n    }, token);\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n\r\nexport const getProduct = async (productId) => {\r\n  try {\r\n    const response = await fetch(`${API}/product/${productId}`, {\r\n      method: 'GET'\r\n    });\r\n    return await handleResponse(response);\r\n  } catch (err) {}\r\n};\r\n","import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img\r\n            src={`${API}/${url}/photo/${item._id}`}\r\n            alt={item.name}\r\n            className=\"img-fluid mb-3\"\r\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ShowImage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StarRating = ({ count = 5, value = 0, size = 24, edit = false, onChange = () => {} }) => {\r\n  const handleClick = (index, isHalf) => {\r\n    if (!edit) return;\r\n\r\n    const newValue = isHalf ? index + 0.5 : index + 1;\r\n    onChange(Math.min(newValue, count));\r\n  };\r\n\r\n  const getStarClass = (index) => {\r\n    if (value >= index + 1) {\r\n      return 'full';\r\n    } else if (value >= index + 0.5) {\r\n      return 'half';\r\n    } else {\r\n      return 'empty';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"star-rating d-flex align-items-center gap-2\">\r\n      {[...Array(count)].map((_, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            position: 'relative',\r\n            display: 'inline-block',\r\n            width: `${size}px`,\r\n            height: `${size}px`,\r\n          }}\r\n        >\r\n          {/* Clickable area for the left half of the star */}\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              width: '50%',\r\n              height: '100%',\r\n              left: 0,\r\n              top: 0,\r\n              cursor: edit ? 'pointer' : 'default',\r\n              zIndex: 3, // Ensure the clickable area is above the star\r\n            }}\r\n            onClick={() => handleClick(index, true)}\r\n          ></div>\r\n\r\n          {/* Clickable area for the right half of the star */}\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              width: '50%',\r\n              height: '100%',\r\n              right: 0,\r\n              top: 0,\r\n              cursor: edit ? 'pointer' : 'default',\r\n              zIndex: 3, // Ensure the clickable area is above the star\r\n            }}\r\n            onClick={() => handleClick(index, false)}\r\n          ></div>\r\n\r\n          {/* Full Star */}\r\n          <span\r\n            className={`star ${getStarClass(index)}`}\r\n            style={{\r\n              color: value >= index + 1 ? '#ffb400' : 'transparent',\r\n              fontSize: `${size}px`,\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              width: '100%',\r\n              WebkitTextStroke: '1px #ffb400',\r\n              zIndex: 1,\r\n              transition: 'color 0.2s ease',\r\n            }}\r\n          >\r\n            ★\r\n          </span>\r\n\r\n          {/* Half Star */}\r\n          <span\r\n            className=\"star half\"\r\n            style={{\r\n              color: value >= index + 0.5 ? '#ffb400' : 'transparent',\r\n              fontSize: `${size}px`,\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              width: '50%',\r\n              overflow: 'hidden',\r\n              WebkitTextStroke: '1px #ffb400',\r\n              zIndex: 2,\r\n              transition: 'color 0.2s ease',\r\n            }}\r\n          >\r\n            ★\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nStarRating.propTypes = {\r\n  count: PropTypes.number,\r\n  value: PropTypes.number,\r\n  size: PropTypes.number,\r\n  edit: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default StarRating;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\nimport StarRating from './StarRating';\r\nimport { getProductReviews } from './apiCore';\r\n\r\nconst Card = ({\r\n  product,\r\n  showViewProductButton = true,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = f => f,\r\n  run = undefined\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n  const [averageRating, setAverageRating] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const data = await getProductReviews(product._id);\r\n        if (data && !data.error) {\r\n          const avgRating = data.reduce((acc, review) => acc + review.rating, 0) / data.length;\r\n          setAverageRating(parseFloat(avgRating.toFixed(1)));\r\n        } \r\n      } catch (err) {\r\n        \r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [product._id]);\r\n\r\n  const showViewButton = showViewProductButton => {\r\n    return (\r\n      showViewProductButton && (\r\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n        </Link>\r\n      )\r\n    );\r\n  };\r\n\r\n  const addToCart = () => {\r\n    addItem(product, setRedirect(true));\r\n  };\r\n\r\n  const shouldRedirect = redirect => {\r\n    if (redirect) {\r\n      return <Navigate to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCartBtn = showAddToCartButton => {\r\n    return (\r\n      showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1\">\r\n          Add to cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showStock = quantity => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary badge-pill\" style={{ marginLeft: '5px' }}>In Stock</span>\r\n    ) : (\r\n      <span className=\"badge badge-primary badge-pill\" style={{ marginLeft: '5px' }}>Out of Stock</span>\r\n    );\r\n  };\r\n\r\n  const handleChange = productId => event => {\r\n    setRun(!run);\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n      updateItem(productId, event.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = cartUpdate => {\r\n    return (\r\n      cartUpdate && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Adjust Quantity</span>\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showRemoveButton = showRemoveProductButton => {\r\n    return (\r\n      showRemoveProductButton && (\r\n        <button\r\n          onClick={() => {\r\n            removeItem(product._id);\r\n            setRun(!run);\r\n          }}\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove Product\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header card-header-1\">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {shouldRedirect(redirect)}\r\n        <ShowImage item={product} url=\"product\" />\r\n        <p className=\"card-p mt-2\">{product.description ? product.description.substring(0, 100) : ''}</p>\r\n        <p className=\"card-p black-10\">$ {product.price}</p>\r\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n        <p className=\"black-8\">Author: {product.author}</p>\r\n        <div style={{ margin: '10px 0' }}>\r\n          <StarRating\r\n            count={5}\r\n            value={averageRating}\r\n            size={24}\r\n            edit={false}\r\n          />\r\n        </div><br />\r\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n        <div style={{ display: 'flex', alignItems: 'center', marginTop: '10px' }}>\r\n          {showStock(product.quantity)}\r\n        </div>\r\n        {showViewButton(showViewProductButton)}\r\n        {showAddToCartBtn(showAddToCartButton)}\r\n        {showRemoveButton(showRemoveProductButton)}\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            ).catch(error => {\r\n                console.error('Error fetching search results:', error);\r\n            });\r\n        }\r\n    };\r\n\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n\r\n                <div className=\"row\">\r\n                    {results.map((product) => (\r\n                        <div key={product._id} className=\"col-12 col-md-6 col-lg-4 mb-3\">\r\n                            <Card product={product} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c) => (\r\n                                <option key={c._id} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name, author, or category\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (!data.error) {\r\n                setProductsBySell(data);\r\n            }\r\n        }).catch(() => {});\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            if (!data.error) {\r\n                setProductsByArrival(data);\r\n            }\r\n        }).catch(() => {});\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"FullStack React Node MongoDB Ecommerce App\"\r\n            description=\"Node React E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-12 col-md-6 col-lg-3 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-12 col-md-6 col-lg-3 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { isAuthenticated } from './index';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const location = useLocation();\r\n\r\n    return isAuthenticated() ? (\r\n        <Component {...rest} />\r\n    ) : (\r\n        <Navigate\r\n            to=\"/signin\"\r\n            state={{ from: location }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n    const token = isAuthenticated().token;\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setHistory(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, [_id, token]); // Include _id and token in the dependency array\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        {history.map((h, i) => (\r\n                            <div key={i}>\r\n                                <hr />\r\n                                {h.products.map((p, i) => (\r\n                                    <div key={i}>\r\n                                        <h6>Product name: {p.name}</h6>\r\n                                        <h6>Product price: ${p.price}</h6>\r\n                                        <h6>Purchased date: {moment(p.createdAt).fromNow()}</h6>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-3\">{userLinks()}</div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { API } from \"../config\";\r\n\r\n// Function to read user data\r\nexport const read = async (userId, token) => {\r\n    try {\r\n        const response = await fetch(`${API}/user/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return await response.json();\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Function to update user data\r\nexport const update = async (userId, token, user) => {\r\n    try {\r\n        const response = await fetch(`${API}/user/${userId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(user)\r\n        });\r\n        return await response.json();\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n// Function to update user data in local storage\r\nexport const updateUser = (user, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"jwt\")) {\r\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n            auth.user = user;\r\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};\r\n\r\n// Function to get user's purchase history\r\nexport const getPurchaseHistory = async (userId, token) => {\r\n    try {\r\n        const response = await fetch(`${API}/orders/by/user/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return await response.json();\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { isAuthenticated } from './index';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n    const location = useLocation();\r\n\r\n    return isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n        <Component {...rest} />\r\n    ) : (\r\n        <Navigate\r\n            to=\"/signin\"\r\n            state={{ from: location }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/categories\">\r\n                            Manage Categories\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-3\">{adminLinks()}</div>\r\n                <div className=\"col-12 col-md-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import { API } from '../config';\r\n\r\nexport const createCategory = async (userId, token, category) => {\r\n    try {\r\n        const response = await fetch(`${API}/category/create/${userId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(category)\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const updateCategory = async (categoryId, userId, token, category) => {\r\n    try {\r\n        const response = await fetch(`${API}/category/${categoryId}/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(category)\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const createProduct = async (userId, token, product) => {\r\n    try {\r\n        const response = await fetch(`${API}/product/create/${userId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: product\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n       \r\n    }\r\n};\r\n\r\nexport const getCategory = async (categoryId) => {\r\n    try {\r\n        const response = await fetch(`${API}/category/${categoryId}`, {\r\n            method: 'GET'\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n\r\n    }\r\n};\r\n\r\n\r\n// Fetch all categories\r\nexport const getCategories = async () => {\r\n    try {\r\n        const response = await fetch(`${API}/categories`, {\r\n            method: \"GET\"\r\n        });\r\n        return await response.json();\r\n    } catch (err) {\r\n\r\n    }\r\n};\r\n\r\n// Delete a category\r\n\r\n// Delete a category\r\nexport const deleteCategory = async (categoryId, userId, token) => {\r\n    try {\r\n        const response = await fetch(`${API}/category/${categoryId}/${userId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return await response.json();\r\n    } catch (err) {\r\n       \r\n    }\r\n};\r\n\r\n\r\nexport const listOrders = async (userId, token) => {\r\n    try {\r\n        const response = await fetch(`${API}/order/list/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const getStatusValues = async (userId, token) => {\r\n    try {\r\n        const response = await fetch(`${API}/order/status-values/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n\r\n    }\r\n};\r\n\r\nexport const updateOrderStatus = async (userId, token, orderId, status) => {\r\n    try {\r\n        const response = await fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ status, orderId })\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n\r\n    }\r\n};\r\n\r\nexport const getProducts = async () => {\r\n    try {\r\n        const response = await fetch(`${API}/products?limit=undefined`, {\r\n            method: 'GET'\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\n\r\nexport const deleteProduct = async (productId, userId, token) => {\r\n    try {\r\n        console.log(`DELETE request to ${API}/product/${productId}/${userId}`);\r\n        const response = await fetch(`${API}/product/${productId}/${userId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n            throw new Error(responseData.message || 'An error occurred while deleting the product.');\r\n        }\r\n\r\n        return responseData;\r\n    } catch (error) {\r\n    \r\n    }\r\n};\r\n\r\n\r\nexport const getProduct = async (productId) => {\r\n    try {\r\n        const response = await fetch(`${API}/product/${productId}`, {\r\n            method: 'GET'\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const updateProduct = async (productId, userId, token, product) => {\r\n    try {\r\n        const response = await fetch(`${API}/product/${productId}/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: product\r\n        });\r\n        return await response.json();\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createCategory } from \"./apiAdmin\";\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // destructure user and token from localstorage\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const handleChange = e => {\r\n        setError(\"\");\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(false);\r\n        // make request to api to create category\r\n        createCategory(user._id, token, { name }).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setError(\"\");\r\n                setSuccess(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const newCategoryFom = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    autoFocus\r\n                    required\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\">{name} is created</h3>;\r\n        }\r\n    };\r\n\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\r\n        }\r\n    };\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new category\"\r\n            description={`G'day ${user.name}, ready to add a new category?`}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryFom()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useReducer, useEffect, useCallback } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    categories: [],\r\n    category: '',\r\n    shipping: '',\r\n    quantity: '',\r\n    photo: '',\r\n    author: '', // Added author field\r\n    loading: false,\r\n    error: '',\r\n    createdProduct: '',\r\n    formData: new FormData()\r\n};\r\n\r\nconst productReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_FIELD':\r\n            return { ...state, [action.field]: action.value };\r\n        case 'SET_CATEGORIES':\r\n            return { ...state, categories: action.categories, formData: new FormData() };\r\n        case 'SET_LOADING':\r\n            return { ...state, loading: true, error: '', createdProduct: '' };\r\n        case 'SET_ERROR':\r\n            return { ...state, error: action.error, loading: false };\r\n        case 'SET_SUCCESS':\r\n            return { ...state, ...initialState, createdProduct: action.createdProduct };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst AddProduct = () => {\r\n    const [state, dispatch] = useReducer(productReducer, initialState);\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const init = useCallback(() => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                dispatch({ type: 'SET_ERROR', error: data.error });\r\n            } else {\r\n                dispatch({ type: 'SET_CATEGORIES', categories: data });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [init]);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        state.formData.set(name, value);\r\n        dispatch({ type: 'SET_FIELD', field: name, value });\r\n    };\r\n\r\n    const clickSubmit = async (event) => {\r\n        event.preventDefault();\r\n        dispatch({ type: 'SET_LOADING' });\r\n\r\n        try {\r\n            const data = await createProduct(user._id, token, state.formData);\r\n            if (data && data.error) {\r\n                dispatch({ type: 'SET_ERROR', error: data.error });\r\n            } else {\r\n                dispatch({ type: 'SET_SUCCESS', createdProduct: data ? data.name : '' });\r\n            }\r\n        } catch (err) {\r\n            dispatch({ type: 'SET_ERROR', error: 'Failed to create product' });\r\n            console.error('Failed to create product', err);\r\n        }\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" aria-label=\"Upload Photo\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={state.name} aria-label=\"Product Name\" required />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={state.description} aria-label=\"Product Description\" required />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={state.price} aria-label=\"Product Price\" required />\r\n            </div>\r\n\r\n            <div className=\"form-group\" style={{ marginBottom: '10px' }}>\r\n                <label className=\"text-muted\">Author</label> {/* Adjusted Author spacing */}\r\n                <input onChange={handleChange('author')} type=\"text\" className=\"form-control\" value={state.author} aria-label=\"Author Name\" required />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\" value={state.category} aria-label=\"Product Category\" required>\r\n                    <option value=\"\" disabled>Please select</option>\r\n                    {state.categories.map((c, i) => (\r\n                        <option key={i} value={c._id}>\r\n                            {c.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\" value={state.shipping} aria-label=\"Product Shipping\" required>\r\n                    <option value=\"\" disabled>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={state.quantity} aria-label=\"Product Quantity\" required />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: state.error ? '' : 'none' }}>\r\n            {state.error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: state.createdProduct ? '' : 'none' }}>\r\n            <h2>{`${state.createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        state.loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { createProduct, getCategories } from '../admin/apiAdmin';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        author: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        formData: new FormData()\r\n    });\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        author,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        formData\r\n    } = values;\r\n\r\n    const init = useCallback(() => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues(v => ({ ...v, error: data.error }));\r\n            } else {\r\n                setValues(v => ({\r\n                    ...v,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                }));\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [init]);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    author: '',\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Author</label>\r\n                <input onChange={handleChange('author')} type=\"text\" className=\"form-control\" value={author} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\" value={category}>\r\n                    <option>Please select</option>\r\n                    {categories && categories.map((c, i) => (\r\n                        <option key={i} value={c._id}>\r\n                            {c.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\" value={shipping}>\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { getReviews } from './apiCore';\r\nimport StarRating from './StarRating';\r\n\r\nconst Reviews = ({ productId }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const loadReviews = useCallback(() => {\r\n    getReviews(productId).then(data => {\r\n      if (data.error) {\r\n        setError(data.error);\r\n      } else {\r\n        setReviews(data);\r\n      }\r\n    });\r\n  }, [productId]);\r\n\r\n  useEffect(() => {\r\n    loadReviews();\r\n  }, [loadReviews]);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n      {reviews.length === 0 && <p className=\"text-muted\">No reviews yet.</p>}\r\n      <div className=\"row\">\r\n        {reviews.map((review, index) => (\r\n          <div key={index} className=\"col-12 col-md-6 col-lg-4 mb-4\">\r\n            <div className=\"card h-100\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{review.user.name}</h5>\r\n                <div className=\"card-text\">\r\n                  <StarRating count={5} value={review.rating} size={24} edit={false} />\r\n                  <p className=\"mt-3\">{review.comment}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { addReview, getUserReview, updateReview, deleteReview, hasDelivered } from './apiCore';\r\nimport StarRating from './StarRating';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ReviewForm = ({ productId, onReviewSubmit }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const { user, token } = isAuthenticated();\r\n  const [message, setMessage] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n  const [reviewId, setReviewId] = useState('');\r\n  const [hasCheckedReview, setHasCheckedReview] = useState(false);\r\n  const [delivered, setDelivered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkReviewExists = async () => {\r\n      if (user && token && !hasCheckedReview) {\r\n        try {\r\n          const deliveryResponse = await hasDelivered(productId, user._id, token);\r\n          \r\n          if (deliveryResponse.delivered) {\r\n            setDelivered(true);\r\n            try {\r\n              const data = await getUserReview(productId, user._id, token);\r\n\r\n              if (data && !data.error) {\r\n                setRating(data.rating);\r\n                setComment(data.comment);\r\n                setReviewId(data._id);\r\n              }\r\n            } catch (err) {\r\n              setMessage('Failed to fetch user review.');\r\n              setIsError(true);\r\n            }\r\n          } else {\r\n            setDelivered(false);\r\n            setMessage('Only customers who have received their order can leave a review.');\r\n            setIsError(true);\r\n          }\r\n        } catch (err) {\r\n          setMessage('Failed to check delivery status.');\r\n          setIsError(true);\r\n        } finally {\r\n          setHasCheckedReview(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (user && token && !hasCheckedReview) {\r\n      checkReviewExists();\r\n    }\r\n  }, [productId, user, token, hasCheckedReview]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!token) {\r\n      setMessage('Please sign in first to leave a review.');\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (!delivered) {\r\n      setMessage('Only customers who have received their order can leave a review.');\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if (rating === 0) {\r\n      setMessage('Please select a star rating.');\r\n      setIsError(true);\r\n      return;\r\n    }\r\n\r\n    const review = { rating, comment };\r\n    try {\r\n      let response;\r\n      if (reviewId) {\r\n        response = await updateReview(reviewId, review, token, user._id);\r\n      } else {\r\n        response = await addReview(productId, user._id, review, token);\r\n        if (!response.error) {\r\n          setReviewId(response._id);\r\n        }\r\n      }\r\n\r\n      if (!response.error) {\r\n        onReviewSubmit();\r\n        setMessage(reviewId ? 'Your review has been updated successfully!' : 'Thank you for your review!');\r\n        setIsError(false);\r\n      } else {\r\n        setMessage('Failed to submit review. Please try again.');\r\n        setIsError(true);\r\n      }\r\n    } catch (err) {\r\n      setMessage('Error submitting review. Please try again.');\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await deleteReview(reviewId, productId, user._id, token);\r\n\r\n      if (!response.error) {\r\n        onReviewSubmit();\r\n        setRating(0);\r\n        setComment('');\r\n        setReviewId('');\r\n        setMessage('Your review has been deleted.');\r\n        setIsError(false);\r\n      } else {\r\n        setMessage('Failed to delete review. Please try again.');\r\n        setIsError(true);\r\n      }\r\n    } catch (err) {\r\n      setMessage('Error deleting review. Please try again.');\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-4\">\r\n      {message && (\r\n        <div className={`alert ${isError ? 'alert-danger' : 'alert-success'}`} role=\"alert\">\r\n          {message} {message === 'Please sign in first to leave a review.' && <Link to=\"/signin\" className=\"alert-link\">Sign in</Link>}\r\n        </div>\r\n      )}\r\n      {delivered ? (\r\n        <>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"rating\" className=\"form-label\">Rating</label>\r\n              <StarRating\r\n                count={5}\r\n                value={rating}\r\n                size={24}\r\n                color=\"#ffd700\"\r\n                edit={true}\r\n                onChange={setRating}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"comment\" className=\"form-label\">Comment</label>\r\n              <textarea\r\n                id=\"comment\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n                placeholder=\"Write your comment here...\"\r\n                className=\"form-control\"\r\n                rows=\"4\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"d-flex justify-content-between flex-wrap\">\r\n              <button type=\"submit\" className=\"btn btn-primary mb-2 me-2\">{reviewId ? 'Update Review' : 'Submit Review'}</button>\r\n              {reviewId && (\r\n                <button type=\"button\" onClick={handleDelete} className=\"btn btn-danger mb-2\">Delete Review</button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        !isError && <div className=\"alert alert-info\" role=\"alert\">Only customers who have received their order can leave a review.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport { read, listRelated } from './apiCore';\r\nimport Card from './Card';\r\nimport Reviews from './reviews';\r\nimport ReviewForm from './reviewForm'; // Ensure correct casing\r\n//import StarRating from './StarRating';\r\nimport { isAuthenticated } from '../auth'; // Ensure the authentication module is imported\r\n\r\nconst Product = () => {\r\n  const [product, setProduct] = useState({});\r\n  const [relatedProduct, setRelatedProduct] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const { productId } = useParams();\r\n  const { token } = isAuthenticated(); // Get user and token from authentication\r\n\r\n  const loadSingleProduct = (productId) => {\r\n    read(productId).then((data) => {\r\n      if (data.error) {\r\n        setError(data.error);\r\n      } else {\r\n        setProduct(data);\r\n        listRelated(data._id).then((data) => {\r\n          if (data.error) {\r\n            setError(data.error);\r\n          } else {\r\n            setRelatedProduct(data);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSingleProduct(productId);\r\n  }, [productId]);\r\n\r\n  return (\r\n    <Layout\r\n      title={product && product.name}\r\n      description={product && product.description && product.description.substring(0, 100)}\r\n      className=\"container-fluid\"\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          {error && <h2 className=\"text-danger\">{error}</h2>}\r\n          {product && product.description && (\r\n            <Card product={product} showViewProductButton={false} />\r\n          )}\r\n\r\n          <h4 className=\"mt-4\">Leave a Review</h4>\r\n          {product._id && <ReviewForm productId={product._id} onReviewSubmit={() => loadSingleProduct(productId)} token={token} />} {/* Pass token here */}\r\n          <h4 className=\"mt-4\">Reviews</h4>\r\n          {product._id && <Reviews productId={product._id} />}\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n          <h4>Related products</h4>\r\n          {relatedProduct.map((p) => (\r\n            <div className=\"mb-3\" key={p._id}>\r\n              <Card product={p} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const instanceRef = useRef();\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = useCallback(async (userId, token) => {\r\n        try {\r\n            const response = await getBraintreeClientToken(userId, token);\r\n            if (response.error) {\r\n                setData(data => ({ ...data, error: response.error }));\r\n            } else {\r\n                setData(data => ({ ...data, clientToken: response.clientToken }));\r\n            }\r\n        } catch (err) {\r\n            setData(data => ({ ...data, error: 'Error fetching client token' }));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userId && token) {\r\n            getToken(userId, token);\r\n        }\r\n    }, [userId, token, getToken]);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    const buy = async () => {\r\n        setData({ loading: true });\r\n        let nonce;\r\n        try {\r\n            const paymentData = await instanceRef.current.requestPaymentMethod();\r\n            nonce = paymentData.nonce;\r\n            const response = await processPayment(userId, token, {\r\n                paymentMethodNonce: nonce,\r\n                amount: getTotal(products)\r\n            });\r\n\r\n            if (response.success) {\r\n                const createOrderData = {\r\n                    products: products,\r\n                    transaction_id: response.transaction.id,\r\n                    amount: response.transaction.amount,\r\n                    address: data.address\r\n                };\r\n\r\n                await createOrder(userId, token, createOrderData);\r\n                emptyCart(() => {\r\n                    setRun(!run);\r\n                    setData({\r\n                        loading: false,\r\n                        success: true,\r\n                        error: ''\r\n                    });\r\n                });\r\n            } else {\r\n                throw new Error(response.message || 'Payment failed');\r\n            }\r\n        } catch (error) {\r\n            console.log('Error:', error);\r\n            setData({ loading: false, error: error.message });\r\n        }\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (instanceRef.current = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Processing your payment...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport { getCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\nimport { isAuthenticated } from '../auth';\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div>\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const noItemsMessage = () => (\r\n        <h2>\r\n            Your cart is empty right here.\r\n            <br />\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <Link to=\"/shop\">Continue shopping</Link>\r\n            )}\r\n        </h2>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout products={items} setRun={setRun} run={run} />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadOrders = useCallback(() => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    }, [user._id, token]);\r\n\r\n    const loadStatusValues = useCallback(() => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    }, [user._id, token]);\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, [loadOrders, loadStatusValues]);\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className=\"form-control\"\r\n                readOnly\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            data => {\r\n                if (data.error) {\r\n                    \r\n                } else {\r\n                    loadOrders();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const showStatus = o => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={e => handleStatusChange(e, o._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`G'day ${user.name}, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    {orders.map((o, oIndex) => (\r\n                        <div\r\n                            className=\"mt-5\"\r\n                            key={oIndex}\r\n                            style={{ borderBottom: \"5px solid indigo\" }}\r\n                        >\r\n                            <h2 className=\"mb-5\">\r\n                                <span className=\"bg-primary\">\r\n                                    Order ID: {o._id}\r\n                                </span>\r\n                            </h2>\r\n\r\n                            <ul className=\"list-group mb-2\">\r\n                                <li className=\"list-group-item\">\r\n                                    {showStatus(o)}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Transaction ID: {o.transaction_id}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Amount: ${o.amount}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Ordered by: {o.user ? o.user.name : \"Unknown User\"}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Ordered on:{\" \"}\r\n                                    {moment(o.createdAt).fromNow()}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Delivery address: {o.address}\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                Total products in the order:{\" \"}\r\n                                {o.products.length}\r\n                            </h3>\r\n\r\n                            {o.products.map((p, pIndex) => (\r\n                                <div\r\n                                    className=\"mb-4\"\r\n                                    key={pIndex}\r\n                                    style={{\r\n                                        padding: \"20px\",\r\n                                        border: \"1px solid indigo\"\r\n                                    }}\r\n                                >\r\n                                    {showInput(\"Product name\", p.name)}\r\n                                    {showInput(\"Product price\", p.price)}\r\n                                    {showInput(\"Product total\", p.count)}\r\n                                    {showInput(\"Product Id\", p._id)}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { useParams } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false,\r\n        showPassword: false\r\n    });\r\n\r\n    const { token } = isAuthenticated();\r\n    const { userId } = useParams();\r\n    const { name, email, password, success, error, showPassword } = values;\r\n\r\n    const [passwordStrength, setPasswordStrength] = useState({\r\n        hasUpperCase: false,\r\n        hasLowerCase: false,\r\n        hasNumber: false,\r\n        hasSpecialChar: false,\r\n        isLongEnough: false\r\n    });\r\n    const [showPasswordStrength, setShowPasswordStrength] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const init = (userId, token) => {\r\n            read(userId, token).then(data => {\r\n                if (data.error) {\r\n                    setValues(v => ({ ...v, error: data.error }));\r\n                } else {\r\n                    setValues(v => ({ ...v, name: data.name, email: data.email }));\r\n                }\r\n            });\r\n        };\r\n        init(userId, token);\r\n    }, [userId, token]);\r\n\r\n    const handleChange = name => event => {\r\n        const value = event.target.value;\r\n        setValues({ ...values, error: '', success: false, [name]: value });\r\n\r\n        if (name === 'password') {\r\n            setShowPasswordStrength(true);\r\n            const updatedStrength = {\r\n                hasUpperCase: /[A-Z]/.test(value),\r\n                hasLowerCase: /[a-z]/.test(value),\r\n                hasNumber: /[0-9]/.test(value),\r\n                hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(value),\r\n                isLongEnough: value.length >= 8\r\n            };\r\n            setPasswordStrength(updatedStrength);\r\n            if (Object.values(updatedStrength).every(strength => strength)) {\r\n                setShowPasswordStrength(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleShowPassword = () => {\r\n        setValues({ ...values, showPassword: !showPassword });\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        update(userId, token, { name, email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        password: '',\r\n                        success: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-success\" style={{ display: success ? '' : 'none' }}>\r\n            Profile updated successfully!\r\n        </div>\r\n    );\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={handleChange('name')} \r\n                    className=\"form-control\" \r\n                    value={name} \r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input \r\n                    type=\"email\" \r\n                    onChange={handleChange('email')} \r\n                    className=\"form-control\" \r\n                    value={email} \r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        onChange={handleChange('password')}\r\n                        onFocus={() => setShowPasswordStrength(true)}\r\n                        onBlur={() => setShowPasswordStrength(false)}\r\n                        className=\"form-control\"\r\n                        value={password}\r\n                        placeholder=\"Leave blank to keep the same\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\" onClick={toggleShowPassword} style={{ cursor: \"pointer\" }}>\r\n                            {showPassword ? \"Hide\" : \"Show\"}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {showPasswordStrength && (\r\n                    <div className=\"password-strength mt-2\">\r\n                        <p className={passwordStrength.hasUpperCase ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasUpperCase ? '✓' : '✗'} Uppercase letter\r\n                        </p>\r\n                        <p className={passwordStrength.hasLowerCase ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasLowerCase ? '✓' : '✗'} Lowercase letter\r\n                        </p>\r\n                        <p className={passwordStrength.hasNumber ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasNumber ? '✓' : '✗'} Number\r\n                        </p>\r\n                        <p className={passwordStrength.hasSpecialChar ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasSpecialChar ? '✓' : '✗'} Special character\r\n                        </p>\r\n                        <p className={passwordStrength.isLongEnough ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.isLongEnough ? '✓' : '✗'} Minimum 8 characters\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-8 offset-md-2\">\r\n                    <h2 className=\"mb-4\">Profile update</h2>\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {profileUpdate(name, email, password)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadProducts = async () => {\r\n        try {\r\n            const data = await getProducts();\r\n            if (data.error) {\r\n               \r\n            } else {\r\n                setProducts(data);\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n    const destroy = async (productId) => {\r\n        if (window.confirm(\"Are you sure you want to delete this product permanently?\")) {\r\n            try {\r\n                const data = await deleteProduct(productId, user._id, token);\r\n                if (data.error) {\r\n                    setSuccess('');\r\n                } else {\r\n                    setSuccess(`Product deleted successfully: ${productId}`);\r\n                    loadProducts();\r\n                }\r\n            } catch (error) {\r\n                setSuccess('');\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Manage Products\"\r\n            description=\"Perform CRUD on products\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"text-center\">Total {products.length} products</h2>\r\n                    <hr />\r\n                    {success && <div className=\"alert alert-success\">{success}</div>}\r\n                    <ul className=\"list-group\">\r\n                        {products.map((p, i) => (\r\n                            <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                <div className=\"d-flex align-items-center w-100\">\r\n                                    <strong className=\"flex-grow-1\">{p.name}</strong>\r\n                                    <div className=\"button-group\">\r\n                                        <Link to={`/admin/product/update/${p._id}`} className=\"btn btn-warning btn-sm mx-2\">\r\n                                            Update\r\n                                        </Link>\r\n                                        <button\r\n                                            onClick={() => destroy(p._id)}\r\n                                            className=\"btn btn-danger btn-sm mx-2\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n            {goBack()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ManageProducts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCategories, deleteCategory } from \"./apiAdmin\";\r\n\r\nconst ManageCategories = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadCategories = async () => {\r\n        try {\r\n            const data = await getCategories();\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n    const destroy = async (categoryId) => {\r\n        if (window.confirm(\"Are you sure you want to delete this category permanently?\")) {\r\n            try {\r\n                const data = await deleteCategory(categoryId, user._id, token);\r\n                if (data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setMessage(`Category deleted successfully: ${categoryId}`);\r\n                    loadCategories();\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Manage Categories\"\r\n            description=\"Perform CRUD on categories\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"text-center\">Total {categories.length} categories</h2>\r\n                    <hr />\r\n                    {message && <div className=\"alert alert-success\">{message}</div>}\r\n                    {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                    <ul className=\"list-group\">\r\n                        {categories.map((c, i) => (\r\n                            <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                <div className=\"d-flex align-items-center w-100\">\r\n                                    <strong className=\"flex-grow-1\">{c.name}</strong>\r\n                                    <div className=\"button-group\">\r\n                                        <Link to={`/admin/category/update/${c._id}`} className=\"btn btn-warning btn-sm mx-2\">\r\n                                            Update\r\n                                        </Link>\r\n                                        <button\r\n                                            onClick={() => destroy(c._id)}\r\n                                            className=\"btn btn-danger btn-sm mx-2\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n            {goBack()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ManageCategories;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\nimport { useNavigate, useParams } from 'react-router-dom'; // Removed 'Link' and 'Navigate'\r\n\r\nconst UpdateProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        author: '',\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        showSuccessModal: false,\r\n        showErrorModal: false,\r\n        formData: new FormData(),\r\n        categories: []\r\n    });\r\n\r\n    const { name, description, price, author, category, shipping, quantity, loading, error, createdProduct, showSuccessModal, showErrorModal, formData, categories } = values;\r\n    const { user, token } = isAuthenticated();\r\n    const { productId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const initCategories = useCallback(() => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues(v => ({ ...v, error: data.error }));\r\n            } else {\r\n                setValues(v => ({ ...v, categories: data, formData: new FormData() }));\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const init = useCallback(() => {\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues(v => ({ ...v, error: data.error }));\r\n            } else {\r\n                setValues(v => ({\r\n                    ...v,\r\n                    name: data.name || '',\r\n                    description: data.description || '',\r\n                    price: data.price || '',\r\n                    author: data.author || '',\r\n                    category: data.category._id || '',\r\n                    shipping: data.shipping || '',\r\n                    quantity: data.quantity || '',\r\n                    formData: new FormData()\r\n                }));\r\n                initCategories();\r\n            }\r\n        });\r\n    }, [productId, initCategories]);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [init]);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateProduct(productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false, showErrorModal: true });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    author: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    createdProduct: data.name,\r\n                    showSuccessModal: true\r\n                });\r\n                setTimeout(() => {\r\n                    navigate('/admin/products');\r\n                }, 2000);\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4 className=\"text-primary\">Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-outline-info\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Author</label>\r\n                <input onChange={handleChange('author')} type=\"text\" className=\"form-control\" value={author} aria-label=\"Author Name\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\" value={category}>\r\n                    <option value=\"\">Please select</option>\r\n                    {categories && categories.map((c, i) => (\r\n                        <option key={i} value={c._id}>\r\n                            {c.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\" value={shipping}>\r\n                    <option value=\"\">Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showErrorModalContent = () => (\r\n        <div className=\"modal\" style={{ display: showErrorModal ? 'block' : 'none' }}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Error</h5>\r\n                        <button type=\"button\" className=\"btn-close\" onClick={() => setValues({ ...values, showErrorModal: false })}></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>{error}</p>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setValues({ ...values, showErrorModal: false })}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const showSuccessModalContent = () => (\r\n        <div className=\"modal\" style={{ display: showSuccessModal ? 'block' : 'none' }}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Success</h5>\r\n                        <button type=\"button\" className=\"btn-close\" onClick={() => setValues({ ...values, showSuccessModal: false })}></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>{`${createdProduct}`} has been updated successfully!</p>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setValues({ ...values, showSuccessModal: false })}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => loading && (\r\n        <div className=\"alert alert-warning\">\r\n            <h2>Loading...</h2>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Update a product\" description={`G'day ${user.name}, ready to update a product?`} className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showErrorModalContent()}\r\n                    {showSuccessModalContent()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { getCategory, updateCategory } from './apiAdmin';\r\n\r\nconst UpdateCategory = () => {\r\n    const [name, setName] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const { user, token } = isAuthenticated();\r\n    const { categoryId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            try {\r\n                const data = await getCategory(categoryId, token);\r\n                if (data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setName(data.name);\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        };\r\n\r\n        init();\r\n    }, [categoryId, token]);\r\n\r\n    const handleChange = (event) => {\r\n        setError('');\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess(false);\r\n        try {\r\n            const data = await updateCategory(categoryId, user._id, token, { name });\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setSuccess(true);\r\n                setTimeout(() => {\r\n                    navigate('/admin/categories');\r\n                }, 2000);\r\n            }\r\n        } catch (error) {\r\n            \r\n        }\r\n    };\r\n\r\n    const updateCategoryForm = () => (\r\n        <form className=\"mb-5\" onSubmit={handleSubmit}>\r\n            <h4>Update Category</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Save Changes</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        error && <div className=\"alert alert-danger\">{error}</div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        success && <div className=\"alert alert-success\">Category updated successfully</div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title={`Hi ${user.name}`}\r\n            description={`Update Category`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showError()}\r\n                    {showSuccess()}\r\n                    {updateCategoryForm()}\r\n                    <Link to=\"/admin/categories\" className=\"btn btn-info mt-5\">\r\n                        Back to Categories\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { API } from '../config';\r\n\r\nconst EmailVerification = () => {\r\n    const { token } = useParams();\r\n    const [message, setMessage] = useState('');\r\n    const [isError, setIsError] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const verifyEmail = async () => {\r\n            try {\r\n                await axios.post(`${API}/verify-email`, { token });\r\n                setMessage('Your email has been verified successfully! Redirecting to sign in...');\r\n                setIsError(false);\r\n                setTimeout(() => {\r\n                    navigate('/signin');\r\n                }, 3000); // Redirect after 3 seconds\r\n            } catch (error) {\r\n                setMessage('Failed to verify email. Please try again.');\r\n                setIsError(true);\r\n            }\r\n        };\r\n        verifyEmail();\r\n    }, [token, navigate]);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Email Verification</h2>\r\n            <div className={`alert ${isError ? 'alert-danger' : 'alert-success'}`} role=\"alert\">\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailVerification;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Layout from '../core/Layout';\r\nimport { API } from '../config';\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messageType, setMessageType] = useState(''); // 'success' or 'error'\r\n\r\n    const handleChange = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(`${API}/forgot-password`, { email });\r\n            setMessage(response.data.message);\r\n            setMessageType('success');\r\n        } catch (error) {\r\n            const errorMsg = error.response.data.error;\r\n            if (errorMsg.includes('User with that email does not exist')) {\r\n                setMessage(\r\n                    <span>\r\n                        The email address you entered is not registered. Please <Link to=\"/signup\">sign up</Link> first.\r\n                    </span>\r\n                );\r\n            } else if (errorMsg.includes('verify')) {\r\n                setMessage('Please verify your email to request a password reset.');\r\n            } else {\r\n                setMessage(errorMsg);\r\n            }\r\n            setMessageType('error');\r\n        }\r\n    };\r\n\r\n    const renderMessage = () => {\r\n        if (messageType === 'success') {\r\n            return <div className=\"alert alert-success\">{message}</div>;\r\n        }\r\n        if (messageType === 'error') {\r\n            return <div className=\"alert alert-danger\">{message}</div>;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Forgot Password\" description=\"Reset your password\" className=\"container col-12 col-md-8 offset-md-2\">\r\n            <h2 className=\"mt-5 mb-4 text-center\">Forgot Password</h2>\r\n            <form onSubmit={handleSubmit} className=\"mb-4\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Email</label>\r\n                    <input type=\"email\" value={email} onChange={handleChange} required className=\"form-control\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n            </form>\r\n            {renderMessage()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport { API } from '../config';\r\n\r\nconst ResetPassword = () => {\r\n    const { token } = useParams();\r\n    const [values, setValues] = useState({\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        showPassword: false,\r\n        message: '',\r\n        error: ''\r\n    });\r\n    const [passwordStrength, setPasswordStrength] = useState({\r\n        hasUpperCase: false,\r\n        hasLowerCase: false,\r\n        hasNumber: false,\r\n        hasSpecialChar: false,\r\n        isLongEnough: false\r\n    });\r\n    const [showPasswordStrength, setShowPasswordStrength] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { newPassword, confirmPassword, showPassword, message, error } = values;\r\n\r\n    const handleChange = name => event => {\r\n        const value = event.target.value;\r\n        setValues({ ...values, error: false, [name]: value });\r\n\r\n        if (name === 'newPassword') {\r\n            setShowPasswordStrength(true);\r\n            const updatedStrength = {\r\n                hasUpperCase: /[A-Z]/.test(value),\r\n                hasLowerCase: /[a-z]/.test(value),\r\n                hasNumber: /[0-9]/.test(value),\r\n                hasSpecialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(value),\r\n                isLongEnough: value.length >= 8\r\n            };\r\n            setPasswordStrength(updatedStrength);\r\n            if (Object.values(updatedStrength).every(strength => strength)) {\r\n                setShowPasswordStrength(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleShowPassword = () => {\r\n        setValues({ ...values, showPassword: !showPassword });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (newPassword !== confirmPassword) {\r\n            setValues({ ...values, message: \"Passwords do not match\" });\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(`${API}/reset-password`, { token, newPassword });\r\n            setValues({ ...values, message: response.data.message });\r\n            setTimeout(() => {\r\n                navigate('/signin');\r\n            }, 3000);\r\n        } catch (error) {\r\n            setValues({ ...values, error: error.response.data.error });\r\n        }\r\n    };\r\n\r\n    const resetPasswordForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">New Password</label>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={newPassword}\r\n                        onChange={handleChange('newPassword')}\r\n                        onFocus={() => setShowPasswordStrength(true)}\r\n                        onBlur={() => setShowPasswordStrength(false)}\r\n                        required\r\n                        className=\"form-control\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\" onClick={toggleShowPassword} style={{ cursor: \"pointer\" }}>\r\n                            {showPassword ? \"Hide\" : \"Show\"}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {showPasswordStrength && (\r\n                    <div className=\"password-strength mt-2\">\r\n                        <p className={passwordStrength.hasUpperCase ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasUpperCase ? '✓' : '✗'} Uppercase letter\r\n                        </p>\r\n                        <p className={passwordStrength.hasLowerCase ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasLowerCase ? '✓' : '✗'} Lowercase letter\r\n                        </p>\r\n                        <p className={passwordStrength.hasNumber ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasNumber ? '✓' : '✗'} Number\r\n                        </p>\r\n                        <p className={passwordStrength.hasSpecialChar ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.hasSpecialChar ? '✓' : '✗'} Special character\r\n                        </p>\r\n                        <p className={passwordStrength.isLongEnough ? 'text-success' : 'text-danger'}>\r\n                            {passwordStrength.isLongEnough ? '✓' : '✗'} Minimum 8 characters\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Confirm New Password</label>\r\n                <input\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={confirmPassword}\r\n                    onChange={handleChange('confirmPassword')}\r\n                    required\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showMessage = () => (\r\n        <div className=\"alert alert-success\" style={{ display: message ? '' : 'none' }}>\r\n            {message}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Reset Password\"\r\n            description=\"Reset your password\"\r\n            className=\"container col-12 col-md-8 offset-md-2\"\r\n        >\r\n            {showError()}\r\n            {showMessage()}\r\n            {resetPasswordForm()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Layout from '../core/Layout'; // Assuming you have a Layout component\r\nimport { API } from '../config';\r\nconst ContactForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        message: '',\r\n        error: '',\r\n        success: ''\r\n    });\r\n\r\n    const { name, email, message, error, success } = formData;\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value, error: '', success: '' });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post(`${API}/contact`, {\r\n                name,\r\n                email,\r\n                message\r\n            });\r\n            setFormData({ ...formData, success: 'Message sent successfully!', name: '', email: '', message: '' });\r\n        } catch (error) {\r\n            setFormData({ ...formData, error: 'Failed to send message, please try again.' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Contact Me\"\r\n            description=\"Feel free to reach out to me using the form below\"\r\n            className=\"container col-12 col-md-8 offset-md-2\"\r\n        >\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-md-8\">\r\n                    <div className=\"card p-4\">\r\n                        <h4 className=\"card-title text-center mb-4\">Get in Touch</h4>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\">Name</label>\r\n                                <input type=\"text\" name=\"name\" className=\"form-control\" value={name} onChange={handleChange} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\">Email</label>\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" value={email} onChange={handleChange} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\">Message</label>\r\n                                <textarea name=\"message\" className=\"form-control\" rows=\"6\" value={message} onChange={handleChange} required></textarea>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Send</button>\r\n                            {error && <div className=\"alert alert-danger mt-3\">{error}</div>}\r\n                            {success && <div className=\"alert alert-success mt-3\">{success}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Signup from './user/Signup';\r\nimport Signin from './user/Signin';\r\nimport Home from './core/Home';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Dashboard from './user/UserDashboard';\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCategory';\r\nimport AddProduct from './admin/AddProduct';\r\nimport Shop from './core/Shop';\r\nimport Product from './core/Product';\r\nimport Cart from './core/Cart';\r\nimport Orders from './admin/Orders';\r\nimport Profile from './user/Profile';\r\nimport ManageProducts from './admin/ManageProducts';\r\nimport ManageCategories from './admin/ManageCategories'; // Import ManageCategories\r\nimport UpdateProduct from './admin/UpdateProduct';\r\nimport UpdateCategory from './admin/UpdateCategory';\r\nimport EmailVerification from './user/EmailVerification';\r\nimport ForgotPassword from './user/ForgotPassword';\r\nimport ResetPassword from './user/ResetPassword';\r\nimport ContactForm from './user/contactForm'; // Import ContactForm\r\n\r\nconst AppRoutes = () => {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/shop\" element={<Shop />} />\r\n            <Route path=\"/signin\" element={<Signin />} />\r\n            <Route path=\"/signup\" element={<Signup />} />\r\n            <Route path=\"/contact\" element={<ContactForm />} /> {/* Add ContactForm route */}\r\n            <Route path=\"/user/dashboard\" element={<PrivateRoute component={Dashboard} />} />\r\n            <Route path=\"/admin/dashboard\" element={<AdminRoute component={AdminDashboard} />} />\r\n            <Route path=\"/create/category\" element={<AdminRoute component={AddCategory} />} />\r\n            <Route path=\"/create/product\" element={<AdminRoute component={AddProduct} />} />\r\n            <Route path=\"/product/:productId\" element={<Product />} />\r\n            <Route path=\"/cart\" element={<Cart />} />\r\n            <Route path=\"/admin/orders\" element={<AdminRoute component={Orders} />} />\r\n            <Route path=\"/profile/:userId\" element={<PrivateRoute component={Profile} />} />\r\n            <Route path=\"/admin/products\" element={<PrivateRoute component={ManageProducts} />} />\r\n            <Route path=\"/admin/categories\" element={<AdminRoute component={ManageCategories} />} /> {/* Add this line */}\r\n            <Route path=\"/admin/product/update/:productId\" element={<AdminRoute component={UpdateProduct} />} />\r\n            <Route path=\"/admin/category/update/:categoryId\" element={<AdminRoute component={UpdateCategory} />} />\r\n            <Route path=\"/verify-email/:token\" element={<EmailVerification />} />\r\n            <Route path=\"/forgot-password\" element={<ForgotPassword />} />\r\n            <Route path=\"/reset-password/:token\" element={<ResetPassword />} />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AppRoutes from './Routes';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\n// Create a root container\r\nconst container = document.getElementById('root');\r\nconst root = ReactDOM.createRoot(container);\r\n\r\n// Render the application with future flags enabled\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter future={{ v7_startTransition: true, v7_relativeSplatPath: true }}>\r\n      <AppRoutes />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}